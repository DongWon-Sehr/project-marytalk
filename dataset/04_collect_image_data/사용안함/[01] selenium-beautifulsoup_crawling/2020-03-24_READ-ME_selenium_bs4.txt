# readme
# 2020-03-24_crawling_practice-selenium_bs4.ipynb 
# 위 파일은 지정 검색어를 블로그 탭 2번째 페이지까지 가져오는 코드가 담겨있습니다.
# =============================================================================
# 본래는 driver의 find_element_by_xpath 메소드로 접근을 했었습니다.
# //*[@id="lnb"]/div/div[1]/ul/li[2]/a - 네이버 블로그탭 xpath 
# 하지만 xpath는 아래와 같은 문제점이 있다는 것을 발견했습니다.
# =============================================================================
# xpath는 나열된 순서를 읽기 때문에 검색 결과에 따라 블로그 탭이 가장 먼저 올 수도, 이미지 탭이 먼저 올 수도 있다.
# xpath는 가변한다. 따라서 좋은 방법은 아니고 selector를 통해 접근해야 한다.
# =============================================================================
# 따라서 블로그 탭에 접근하는 방식을 xpath가 아닌 selector로 접근하는 것이 더 정확하다고 판단했습니다.
# =============================================================================
# ▶블로그 검색결과 2번째 페이지 selector
#	#main_pack > div.paging > a:nth-child(2)
# ▶블로그 검색결과 3번째 페이지 selector
#	#main_pack > div.paging > a:nth-child(3)
# =============================================================================
# selector 조회 결과 a:nth-child(n)이라는 규칙을 발견했고 해당 n자리에 for문을 돌리면 블로그 페이지 전부를
# 긁어올 수 있다는 생각이 들었습니다.
# for문으로 n의 값만 바꿔주면 페이지 이동을 자동화해서 블로그의 링크를 긁어올 수 있을 것 같습니다.